//---- *REPLACE WITH YOUR API KEY* ü§å
const {
  GoogleGenerativeAI,
  HarmCategory,
  HarmBlockThreshold,
} = require("@google/generative-ai");
const { GoogleAIFileManager } = require("@google/generative-ai/server");
const fs = require("fs")


cmd({
  pattern: "ai",
  react: 'ü§ñ',
  desc: "Ask anything to Google Gemini AI.",
  category: "ai",
  use: ".gemini *<Your Quoestion>*",
  filename: __filename
}, async (conn, mek, msg, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
  try {
    const text = args.join(" ");
    if (!text) {
      return reply(`‚ùóÔ∏è Please GFive Me A Question`);
    }

    const prompt = `‡∂∏‡∂∏ ${pushname}, ‡∂∏‡∂∏ ‡∂Ö‡∑É‡∂± ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∑Ä‡∂Ω‡∂ß ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω‡∑ô‡∂±‡∑ä ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±. ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ Gemini AI. ‡∂î‡∂∂ WhatsApp AI Bot ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä. ‡∂î‡∂∂‡∑Ä ‡∑Ñ‡∑ê‡∂Ø‡∑î‡∑Ä‡∑ö Kavidu rasanga ‡∂ö‡∑í‡∂∫‡∂± ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä. ‡∑É‡∑í‡∂≠‡∂±‡∑ä‡∂± ‡∂î‡∂∂ ‡∂≠‡∂ª‡∑î‡∂´ ‡∂ö‡∑ú‡∂Ω‡∑ä‡∂Ω‡∑ô‡∂ö‡∑ä ‡∂ö‡∑í‡∂∫‡∂Ω ‡∑Ñ‡∑í‡∂≠‡∂Ω ‡∂ë‡∂∏ ‡∂∑‡∑è‡∑Ç‡∑è‡∑Ä‡∑ô‡∂±‡∑ä ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±. Funny ‡∑Ä‡∑ô‡∂±‡∑ä‡∂±, ‡∂î‡∂∂ bot ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∂ö‡∑í‡∂∫‡∂Ω ‡∑Ñ‡∑í‡∂≠‡∂±‡∑ä‡∂± ‡∂∂‡∑ê‡∂ª‡∑í ‡∑Ä‡∑í‡∂Ø‡∑í‡∑Ñ‡∂ß ‡∑É‡∑ê‡∂∂‡∑ë ‡∂∏‡∂±‡∑î‡∑É‡∑ä‡∑É‡∂∫‡∑ô‡∂ö‡∑ä ‡∂ö‡∑í‡∂∫‡∂Ω ‡∑Ñ‡∑í‡∂≠‡∂±‡∑ä ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±. Use meaningful emojies, don't use English.
    [Bro = ‡∂∏‡∂†‡∂Ç, Bro = ‡∑É‡∑Ñ‡∑ù, ‡∂∂‡∂Ç, Hi = ‡∂Ö‡∂©‡∑ù, ‡∑É‡∑í‡∂ª‡∑è‡∑Ä‡∂ß, ‡∂ë‡∂Ω‡∂∏, Funny = ‡∂Ü‡∂≠‡∂Ω‡∑ä]
    ‡∂∏‡∂ú‡∑ö ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫: ${text}`;

    const payload = {
      contents: [{
        parts: [{ text: prompt }]
      }]
    };

    const response = await axios.post(
      GEMINI_API_URL,
      payload,
      {
        headers: {
          "Content-Type": "application/json",
        },
      }
    );

    if (!response.data || !response.data.candidates || !response.data.candidates[0]?.content?.parts) {
      return reply("‚ùå Gemini AI ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑É‡∂∏‡∂≠‡∑ä ‡∑Ä‡∑í‡∂∫. üò¢");
    }
    
    const aiResponse = response.data.candidates[0].content.parts[0].text;
    await reply(`${aiResponse}`);
  } catch (error) {
    console.error("Error:", error.response?.data || error.message);
    reply("‚ùå ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫ ‡∑É‡∑ê‡∂ö‡∑É‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í ‡∑Ä‡∑í‡∂∫. üò¢");
  }
});

module.exports = cmd;
